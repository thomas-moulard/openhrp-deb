#VRML V2.0 utf8

PROTO Joint [
  exposedField     SFVec3f      center              0 0 0
  exposedField     MFNode       children            []
  exposedField     MFFloat      llimit              []
  exposedField     MFFloat      lvlimit             []
  exposedField     SFRotation   limitOrientation    0 0 1 0
  exposedField     SFString     name                ""
  exposedField     SFRotation   rotation            0 0 1 0
  exposedField     SFVec3f      scale               1 1 1
  exposedField     SFRotation   scaleOrientation    0 0 1 0
  exposedField     MFFloat      stiffness           [ 0 0 0 ]
  exposedField     SFVec3f      translation         0 0 0
  exposedField     MFFloat      ulimit              []
  exposedField     MFFloat      uvlimit             []
  exposedField     SFString     jointType           ""
  exposedField     SFInt32      jointId             -1
  exposedField     SFVec3f      jointAxis           0 0 1

  exposedField     SFFloat      gearRatio           1
  exposedField     SFFloat      rotorInertia        0
  exposedField     SFFloat      rotorResistor       0
  exposedField     SFFloat      torqueConst         1
  exposedField     SFFloat      encoderPulse        1
]
{
  Transform {
    center           IS center
    children         IS children
    rotation         IS rotation
    scale            IS scale
    scaleOrientation IS scaleOrientation
    translation      IS translation
  }
}

PROTO Segment [
  field           SFVec3f     bboxCenter        0 0 0
  field           SFVec3f     bboxSize          -1 -1 -1
  exposedField    SFVec3f     centerOfMass      0 0 0
  exposedField    MFNode      children          [ ]
  exposedField    SFNode      coord             NULL
  exposedField    MFNode      displacers        [ ]
  exposedField    SFFloat     mass              0 
  exposedField    MFFloat     momentsOfInertia  [ 0 0 0 0 0 0 0 0 0 ]
  exposedField    SFString    name              ""
  eventIn         MFNode      addChildren
  eventIn         MFNode      removeChildren
]
{
  Group {
    addChildren    IS addChildren
    bboxCenter     IS bboxCenter
    bboxSize       IS bboxSize
    children       IS children
    removeChildren IS removeChildren
  }
}

PROTO Humanoid [
  field           SFVec3f    bboxCenter            0 0 0
  field           SFVec3f    bboxSize              -1 -1 -1
  exposedField    SFVec3f    center                0 0 0
  exposedField    MFNode     humanoidBody          [ ]
  exposedField    MFString   info                  [ ]
  exposedField    MFNode     joints                [ ]
  exposedField    SFString   name                  ""
  exposedField    SFRotation rotation              0 0 1 0
  exposedField    SFVec3f    scale                 1 1 1
  exposedField    SFRotation scaleOrientation      0 0 1 0
  exposedField    MFNode     segments              [ ]
  exposedField    MFNode     sites                 [ ]
  exposedField    SFVec3f    translation           0 0 0
  exposedField    SFString   version               "1.1"
  exposedField    MFNode     viewpoints            [ ]
]
{
  Transform {
    bboxCenter       IS bboxCenter
    bboxSize         IS bboxSize
    center           IS center
    rotation         IS rotation
    scale            IS scale
    scaleOrientation IS scaleOrientation
    translation      IS translation
    children [
      Group {
        children IS viewpoints
      }
      Group {
        children IS humanoidBody 
      }
    ]
  }
}

PROTO VisionSensor [
  exposedField SFVec3f    translation       0 0 0
  exposedField SFRotation rotation          0 0 1 0
  exposedField MFNode     children          [ ]
  exposedField SFFloat    fieldOfView       0.785398
  exposedField SFString   name              ""
  exposedField SFFloat    frontClipDistance 0.01
  exposedField SFFloat    backClipDistance  10.0
  exposedField SFString   type              "NONE"
  exposedField SFInt32    sensorId          -1
  exposedField SFInt32    width             320
  exposedField SFInt32    height            240
  exposedField SFFloat    frameRate         30
]
{
  Transform {
    rotation         IS rotation
    translation      IS translation
    children         IS children
  }
}


PROTO ForceSensor [  
  exposedField SFVec3f    maxForce    -1 -1 -1
  exposedField SFVec3f    maxTorque   -1 -1 -1
  exposedField SFVec3f    translation 0 0 0
  exposedField SFRotation rotation    0 0 1 0
  exposedField SFInt32    sensorId    -1
]
{
  Transform {
    translation IS translation
    rotation    IS rotation
  }
}

PROTO Gyro [
  exposedField SFVec3f    maxAngularVelocity -1 -1 -1
  exposedField SFVec3f    translation        0 0 0
  exposedField SFRotation rotation           0 0 1 0
  exposedField SFInt32    sensorId           -1
]
{
  Transform {
    translation IS translation
    rotation    IS rotation
  }
}

PROTO AccelerationSensor [
  exposedField SFVec3f    maxAcceleration -1 -1 -1
  exposedField SFVec3f    translation     0 0 0
  exposedField SFRotation rotation        0 0 1 0
  exposedField SFInt32    sensorId        -1
]
{
  Transform {
    translation IS translation
    rotation    IS rotation
  }
}

PROTO PressureSensor [
  exposedField SFFloat    maxPressure -1
  exposedField SFVec3f    translation 0 0 0
  exposedField SFRotation rotation    0 0 1 0
  exposedField SFInt32    sensorId    -1
]
{
  Transform {
    translation IS translation
    rotation    IS rotation
  }
}

PROTO PhotoInterrupter [
  exposedField SFVec3f transmitter 0 0 0
  exposedField SFVec3f receiver    0 0 0
  exposedField SFInt32 sensorId    -1
]
{
  Transform{
    children [
      Transform{
        translation IS transmitter
      }
      Transform{
        translation IS receiver
      }
    ]
  }
}

NavigationInfo {
  avatarSize    0.5
  headlight     TRUE
  type  ["EXAMINE", "ANY"]
}

Background {
  skyColor 0.4 0.6 0.4
}

Viewpoint {
  position    3 0 0.835
  orientation 0.5770 0.5775 0.5775 2.0935
}

DEF SimpleVehicle Humanoid {

  humanoidBody [

    DEF root Joint {
      jointType "free"
      translation 0 0 0.1
      children [
        DEF root_LINK Segment {
          centerOfMass  0 0 0
          mass    10.0
          momentsOfInertia [ 0.1 0 0 0 0.1 0 0 0 0.5 ]

          children [
	    Inline { url "body.wrl" }
          ]
        }  # End root_LINK

        DEF VISION_SENSOR1 VisionSensor {
          translation   0.0 -0.3 0.1
          rotation     0 1 1 3.1415
          fieldOfView   0.7 
          name          "Camera"
          type          "DEPTH"
          sensorId      0
          width         400
          height        300
          children [
	    Inline { url "camera.wrl" }
          ]
        }

        DEF Steering Joint {
          translation 0 -0.2 0
          jointType "rotate"
          jointAxis 0 0 1
          jointId  0
          children [
            DEF Steering_LINK Segment {
              centerOfMass  0 0 0
              mass    0.5
              momentsOfInertia [ 0.01 0 0 0 0.01 0 0 0 0.01 ]
            }

            DEF WheelC Joint {
              jointType "rotate"
              jointAxis 1 0 0
              jointId  1
              children [
                DEF WheelC_LINK Segment {
                  centerOfMass  0 0 0 
                  mass    0.5
                  momentsOfInertia [ 0.01 0 0 0 0.01 0 0 0 0.01 ]

                  children [
		    Inline { url "wheel.wrl" }
                  ]
                } # segment WheelC_LINK
              ]
            }  # joint WheelC
          ]
        }  # joint Steering

        DEF WheelL Joint {
          translation 0.17 0.2 0
          jointType "rotate"           
          jointAxis 1 0 0
          jointId 2
          children [
            DEF WheelL_LINK Segment {
              centerOfMass 0 0 0
              mass 1
              momentsOfInertia [ 0.02 0 0 0 0.02 0 0 0 0.02 ]

              children [
	        Inline { url "wheel.wrl" }
              ]
            } # End of WheelL_LINK
          ]
        } # End of WheelL

        DEF WheelR Joint {
          translation -0.17 0.2 0
          jointType "rotate"
          jointAxis 1 0 0
          jointId 3

          children [
            DEF WheelR_LINK Segment {
              centerOfMass          0 0 0
              mass                  1
              momentsOfInertia      [ 0.02 0 0 0 0.02 0 0 0 0.02 ]

              children [
	        Inline { url "wheel.wrl" }
              ]
            }  # End of WheelR_LINK
          ]
        }  # End of WheelR
      ]
    }
  ]


  # List up all the joints' name you use
  joints [
    USE root,
    USE Steering,
    USE WheelC,
    USE WheelL,
    USE WheelR
  ]

  # List up all the segments' name you use
  segments [
    USE root_LINK,
    USE Steering_LINK,
    USE WheelC_LINK,
    USE WheelL_LINK,
    USE WheelR_LINK
  ]
}

